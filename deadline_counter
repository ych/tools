#!/usr/bin/env ruby

require 'optparse'
require 'rubygems'
require 'inifile'

ini = nil
section =
users = []

OptionParser.new do |opts|
	opts.on("-u", "--user user1[,user2]..", Array, "User list") do |list|
		users = list
	end
	opts.on("-f", "--file config", "Ini file") do |file|
		ini = IniFile.new( :filename => file)
	end
	opts.on("-s", "--section domain", "Section") do |sect|
		section = sect
	end
	opts.on_tail("-h", "--help", "Show help message") do
		puts opts
		exit
	end
end.parse!

if nil == ini
	$stderr.puts "No ini file"
	exit
end

if 1 == users.length
	print_userid = false;
else
	print_userid = true;
end

if 0 == users.length
	if 0 == ini[section].keys.length
		$stderr.puts "No avail data"
		exit
	else
		users = ini[section].keys
	end
end

users.delete_if {|user| false == ini[section].has_key?(user) && nil == (puts "The user #{user} is invaild!") } 

users.each do |user|

	period = ini[section][user].split(/[-]/)

	if 1 == period.length
		is_start_date_existed = false;
		date = period[0].split(/[\/]/)
		end_date = Time.local(date[0], date[1], date[2])
	else
		date = period[0].split(/[\/]/)
		if 3 == date.length
			start_date = Time.local(date[0], date[1], date[2])
			is_start_date_existed = true;
		else
			is_start_date_existed = false;
		end

		date = period[1].split(/[\/]/)
		end_date = Time.local(date[0], date[1], date[2])
	end

	still = end_date - Time.now

	print "#{user}: " if true == print_userid
	print "%d days" % [still.div(24*60*60)+1]

	if true == is_start_date_existed
		total = end_date - start_date
		print " %.2f%%" % [still.fdiv(total.div(100))]
	end

	puts ""
end
